<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CodeBlocQ</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.codeblocq.com/"/>
  <updated>2016-05-31T07:54:50.000Z</updated>
  <id>http://www.codeblocq.com/</id>
  
  <author>
    <name>Jonathan Klughertz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Understand the SVG viewBox</title>
    <link href="http://www.codeblocq.com/2016/05/Understand-the-SVG-viewBox/"/>
    <id>http://www.codeblocq.com/2016/05/Understand-the-SVG-viewBox/</id>
    <published>2016-05-31T02:48:32.000Z</published>
    <updated>2016-05-31T07:54:50.000Z</updated>
    
    <content type="html">&lt;p&gt;This article is a full explanation on how and when to use the SVG &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viewBox&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;The viewBox property is like a camera in a 2D scene&lt;/strong&gt;, it allows you to zoom in and out and focus only on certain part of the svg.&lt;/p&gt;
&lt;h2 id=&quot;Definition&quot;&gt;&lt;a href=&quot;#Definition&quot; class=&quot;headerlink&quot; title=&quot;Definition&quot;&gt;&lt;/a&gt;Definition&lt;/h2&gt;&lt;p&gt;A viewBox value consists of 4 integers separated by whitespaces:&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xPosition yPosition width height&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xPosition&lt;/code&gt;: The X (horizontal axis) position of the top left corner of the viewBox&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yPosition&lt;/code&gt;: The Y (vertical axis) position of the top left corner of the viewBox&lt;/li&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt;: The width of the portion of the entire SVG we want to capture&lt;/li&gt;
&lt;li&gt;&lt;code&gt;height&lt;/code&gt;: The height of the portion of the entire SVG we want to capture&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s look at examples.&lt;/p&gt;
&lt;h2 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h2&gt;&lt;h3 id=&quot;Base-example&quot;&gt;&lt;a href=&quot;#Base-example&quot; class=&quot;headerlink&quot; title=&quot;Base example&quot;&gt;&lt;/a&gt;Base example&lt;/h3&gt;&lt;p&gt;This is the base SVG we are going to use throughout this course.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;p&gt;And here is the corresponding SVG code:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:xlink&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/1999/xlink&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;border: solid 1px grey&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;radialGradient&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;grad&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;offset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10%&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;stop-color&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;gold&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;offset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;95%&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;stop-color&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;radialGradient&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fill&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;url(#grad)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cx&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We have a 100px by 100px svg canvas which contains a 100px diameter disc centered in (50, 50).&lt;/p&gt;
&lt;h3 id=&quot;Identity&quot;&gt;&lt;a href=&quot;#Identity&quot; class=&quot;headerlink&quot; title=&quot;Identity&quot;&gt;&lt;/a&gt;Identity&lt;/h3&gt;&lt;p&gt;In our first example, let’s create a viewBox that is placed at (0, 0) (top left corner) and looks at a 100px by 100px portion of our SVG. In other words, it does not do anything since it is the same as the SVG Element size… (for now)&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 100&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:xlink&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/1999/xlink&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 100&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;border: solid 1px grey&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fill&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;url(#grad)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cx&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Zoom-In&quot;&gt;&lt;a href=&quot;#Zoom-In&quot; class=&quot;headerlink&quot; title=&quot;Zoom In&quot;&gt;&lt;/a&gt;Zoom In&lt;/h3&gt;&lt;p&gt;We leave the viewBox at (0, 0) but only look at the first 50px by 50px part of the SVG.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 50 50&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 50 50&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Imagine the camera zooming at the first quarter and displaying that in a 100x100 SVG Element.&lt;/p&gt;
&lt;h3 id=&quot;Zoom-Out&quot;&gt;&lt;a href=&quot;#Zoom-Out&quot; class=&quot;headerlink&quot; title=&quot;Zoom Out&quot;&gt;&lt;/a&gt;Zoom Out&lt;/h3&gt;&lt;p&gt;We leave the viewBox at (0, 0) but look at a bigger area of the SVG (200px by 200px).&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 200&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 200&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Translation&quot;&gt;&lt;a href=&quot;#Translation&quot; class=&quot;headerlink&quot; title=&quot;Translation&quot;&gt;&lt;/a&gt;Translation&lt;/h3&gt;&lt;p&gt;This time around, we won’t modify the size of the area we want to look at (100px by 100px) but we will move the top left corner of the viewBox to the middle of the disc which is located at (50, 50).&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;50 50 100 100&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50 50 100 100&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It is possible to use negative values for the the X and Y position of the viewBox (it is not possible to use negative values for the width and height though).&lt;/p&gt;
&lt;h3 id=&quot;Aspect-Ratio&quot;&gt;&lt;a href=&quot;#Aspect-Ratio&quot; class=&quot;headerlink&quot; title=&quot;Aspect Ratio&quot;&gt;&lt;/a&gt;Aspect Ratio&lt;/h3&gt;&lt;p&gt;In all the examples so far, we have kept the aspect ratio. Let’s see what happens if we zoom out more on one dimension.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 100&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 100&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;So what happened here, is we took a 200px by 100px viewBox (in &lt;span style=&quot;color: red;&quot;&gt;red&lt;/span&gt; below) out of our initial SVG and resized it to fit in our 100px by 100px SVG HTML element:&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;400&quot; height=&quot;100&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;rect width=&quot;200&quot; height=&quot;100&quot; fill=&quot;transparent&quot; stroke=&quot;red&quot;/&gt;&lt;polyline points=&quot;240 25 260 50 240 75&quot; stroke=&quot;black&quot; stroke-width=&quot;5&quot; stroke-linecap=&quot;butt&quot; fill=&quot;none&quot; stroke-linejoin=&quot;miter&quot;/&gt;&lt;rect x=&quot;300&quot; y=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; fill=&quot;transparent&quot; stroke=&quot;grey&quot;/&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;325&quot; cy=&quot;50&quot; r=&quot;25&quot;/&gt;&lt;rect x=&quot;300&quot; y=&quot;25&quot; width=&quot;100&quot; height=&quot;50&quot; fill=&quot;transparent&quot; stroke=&quot;red&quot;/&gt;&lt;/svg&gt;

&lt;p&gt;&lt;strong&gt;By default, the aspect ration is preserved&lt;/strong&gt;, which is why the disc and viewBox height is also divided by half. You should also note that when auto resizing to preserve the aspect ratio, the browser centers the figure. &lt;/p&gt;
&lt;h3 id=&quot;Stretch&quot;&gt;&lt;a href=&quot;#Stretch&quot; class=&quot;headerlink&quot; title=&quot;Stretch&quot;&gt;&lt;/a&gt;Stretch&lt;/h3&gt;&lt;p&gt;The next logical question would be: why if do not want to preserve the aspect ratio but stretch the disc into an ellipse instead.&lt;/p&gt;
&lt;p&gt;Reusing the example above, this is done by adding an extra element to the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; HTML element: &lt;code&gt;preserveAspectRatio=&amp;quot;none&amp;quot;&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 100&quot; preserveaspectratio=&quot;none&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The Aspect Ration is not preserved here, as a result, the circle is compressed at the width is reduced by half but the height remains the same.&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;400&quot; height=&quot;100&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;rect width=&quot;200&quot; height=&quot;100&quot; fill=&quot;transparent&quot; stroke=&quot;red&quot;/&gt;&lt;polyline points=&quot;240 25 260 50 240 75&quot; stroke=&quot;black&quot; stroke-width=&quot;5&quot; stroke-linecap=&quot;butt&quot; fill=&quot;none&quot; stroke-linejoin=&quot;miter&quot;/&gt;&lt;rect x=&quot;300&quot; y=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; fill=&quot;transparent&quot; stroke=&quot;red&quot;/&gt;&lt;ellipse fill=&quot;url(#grad)&quot; cx=&quot;325&quot; cy=&quot;50&quot; rx=&quot;25&quot; ry=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;h3 id=&quot;“Meet”-Property&quot;&gt;&lt;a href=&quot;#“Meet”-Property&quot; class=&quot;headerlink&quot; title=&quot;“Meet” Property&quot;&gt;&lt;/a&gt;“Meet” Property&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;meet&lt;/code&gt; property is another possible value for &lt;code&gt;preserveAspectRatio&lt;/code&gt;. It indicates that the aspect ration should be preserved and that all edges should remain contained within the viewBox.&lt;/p&gt;
&lt;p&gt;In the situation where you want to keep the aspect ratio, you might also want to control the position where the final vector is placed (centred by default). This is why the &lt;code&gt;meet&lt;/code&gt; property should be paired with another list of keywords to specify the final placement of the vector.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Property&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Place &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMinYMin&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Top Left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMidYMin&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Center Left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMaxYMin&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Bottom Left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMinYMid&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Top Center&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMidYMid&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Middle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMaxYMid&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Bottom Center&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMinYMax&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Top Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMidYMax&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Center Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;xMaxYMax&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Bottom Right&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With an horizontal viewBox: (xMin, xMid and xMax are equivalent)&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMin meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 100&quot; preserveaspectratio=&quot;xMidYMin meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMid meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 100&quot; preserveaspectratio=&quot;xMidYMid meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 200 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMax meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 200 100&quot; preserveaspectratio=&quot;xMidYMax meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;p&gt;With a vertical viewBox: (yMin, yMid and yMax are equivalent)&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 200&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMinYMid meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 200&quot; preserveaspectratio=&quot;xMinYMid meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 200&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMid meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 200&quot; preserveaspectratio=&quot;xMidYMid meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 200&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMid meet&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 200&quot; preserveaspectratio=&quot;xMaxYMid meet&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;h3 id=&quot;“Slice”-Property&quot;&gt;&lt;a href=&quot;#“Slice”-Property&quot; class=&quot;headerlink&quot; title=&quot;“Slice” Property&quot;&gt;&lt;/a&gt;“Slice” Property&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;meet&lt;/code&gt; value can be replace with &lt;code&gt;slice&lt;/code&gt;. Instead of resizing and containing the edges of the viewBox within the SVG element, the vector is sliced.&lt;/p&gt;
&lt;p&gt;I believe that at this point, the examples should speak for themselves.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With an horizontal viewBox: (yMin, yMid and yMax are equivalent)&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 166 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMinYMid slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 166 100&quot; preserveaspectratio=&quot;xMinYMid slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 166 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMid slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 166 100&quot; preserveaspectratio=&quot;xMidYMid slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 166 100&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMaxYMid slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 166 100&quot; preserveaspectratio=&quot;xMaxYMid slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;p&gt;With a vertical viewBox: (xMin, xMid and xMax are equivalent)&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 166&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMin slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 166&quot; preserveaspectratio=&quot;xMidYMin slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 166&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMid slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 166&quot; preserveaspectratio=&quot;xMidYMid slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 0 100 166&quot;&lt;/span&gt; preserveAspectRatio=&lt;span class=&quot;string&quot;&gt;&quot;xMidYMax slice&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100&quot; height=&quot;100&quot; viewbox=&quot;0 0 100 166&quot; preserveaspectratio=&quot;xMidYMax slice&quot; style=&quot;border: solid 1px grey&quot;&gt;&lt;defs&gt;&lt;radialgradient id=&quot;grad&quot;&gt;&lt;stop offset=&quot;10%&quot; stop-color=&quot;gold&quot;/&gt;&lt;stop offset=&quot;95%&quot; stop-color=&quot;green&quot;/&gt;&lt;/radialgradient&gt;&lt;/defs&gt;&lt;circle fill=&quot;url(#grad)&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot;/&gt;&lt;/svg&gt;

&lt;h2 id=&quot;The-End&quot;&gt;&lt;a href=&quot;#The-End&quot; class=&quot;headerlink&quot; title=&quot;The End&quot;&gt;&lt;/a&gt;The End&lt;/h2&gt;&lt;p&gt;That’s it for my explanations on the SVG viewBox, please let me know if you have any questions, corrections or if I have missed anything.&lt;/p&gt;
&lt;p&gt;The code for all the examples above is available on &lt;a href=&quot;http://codepen.io/klugjo/pen/gMONQv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;gMONQv&quot; data-default-tab=&quot;result&quot; data-user=&quot;klugjo&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/klugjo/pen/gMONQv/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG viewBox examples&lt;/a&gt; by Jonathan klughertz (&lt;a href=&quot;http://codepen.io/klugjo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@klugjo&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;This article is a full explanation on how and when to use the SVG &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="http://www.codeblocq.com/tags/HTML5/"/>
    
      <category term="SVG" scheme="http://www.codeblocq.com/tags/SVG/"/>
    
      <category term="viewBox" scheme="http://www.codeblocq.com/tags/viewBox/"/>
    
  </entry>
  
  <entry>
    <title>Two Ways of Creating an Animation Loop in JavaScript</title>
    <link href="http://www.codeblocq.com/2016/05/Two-Ways-of-Creating-an-Animation-Loop-in-JavaScript/"/>
    <id>http://www.codeblocq.com/2016/05/Two-Ways-of-Creating-an-Animation-Loop-in-JavaScript/</id>
    <published>2016-05-30T06:45:14.000Z</published>
    <updated>2016-05-31T07:58:33.000Z</updated>
    
    <content type="html">&lt;p&gt;This article looks at two basic ways to create a basic animation loop.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Example-Details&quot;&gt;&lt;a href=&quot;#Example-Details&quot; class=&quot;headerlink&quot; title=&quot;Example Details&quot;&gt;&lt;/a&gt;Example Details&lt;/h2&gt;&lt;p&gt;The example will look at moving a rectangle on a webpage from left to right.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;60 fps frame rate&lt;/li&gt;
&lt;li&gt;Move 1 pixel per frame&lt;/li&gt;
&lt;li&gt;Go from 0 to 400px&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a &lt;a href=&quot;http://codepen.io/klugjo/pen/zBYLOX&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Pen&lt;/a&gt; with the code.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;zBYLOX&quot; data-default-tab=&quot;result&quot; data-user=&quot;klugjo&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/klugjo/pen/zBYLOX/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setTimeout vs requestAnimationFrame &lt;/a&gt; by Jonathan klughertz (&lt;a href=&quot;http://codepen.io/klugjo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@klugjo&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;


&lt;h2 id=&quot;Using-set-Timeout&quot;&gt;&lt;a href=&quot;#Using-set-Timeout&quot; class=&quot;headerlink&quot; title=&quot;Using set Timeout&quot;&gt;&lt;/a&gt;Using set Timeout&lt;/h2&gt;&lt;p&gt;The first way of creating the loop that comes to mind is to use &lt;code&gt;window.setTimeout&lt;/code&gt; and call a function every 1/60th of a second to achieve 60fps.&lt;/p&gt;
&lt;p&gt;Here is the gist:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setInterval(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// updateUI();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The updateUI function will be responsible for updating the CSS.&lt;/p&gt;
&lt;p&gt;Here is the full code to move a DOM element around.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; refreshRate = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; maxXPosition = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rect = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;rect0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; speedX = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; positionX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setInterval(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  positionX = positionX + speedX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (positionX &amp;gt; maxXPosition || positionX &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    speedX = speedX * (&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rect.style.left = positionX + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, refreshRate);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Using-request-Animation-Frame&quot;&gt;&lt;a href=&quot;#Using-request-Animation-Frame&quot; class=&quot;headerlink&quot; title=&quot;Using request Animation Frame&quot;&gt;&lt;/a&gt;Using request Animation Frame&lt;/h2&gt;&lt;p&gt;Another and cleaner way of creating a game loop is to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;requestAnimationFrame&lt;/a&gt; built in function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt; will call the next frame and will need to be called recursively once the UI has been updated.&lt;/p&gt;
&lt;p&gt;Here is the gist:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// UpdateUI();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And here is the full code to move a DOM element around:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; refreshRate = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; maxXPosition = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rect = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;rect1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; speedX = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; positionX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  positionX = positionX + speedX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (positionX &amp;gt; maxXPosition || positionX &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    speedX = speedX * (&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rect.style.left = positionX + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This article looks at two basic ways to create a basic animation loop.&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="CSS" scheme="http://www.codeblocq.com/tags/CSS/"/>
    
      <category term="Animation" scheme="http://www.codeblocq.com/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Performance Comparison: ES6 Template Literals vs HandleBars in Node</title>
    <link href="http://www.codeblocq.com/2016/05/Performance-Comparison-ES6-Template-Literals-vs-HandleBars-in-Node/"/>
    <id>http://www.codeblocq.com/2016/05/Performance-Comparison-ES6-Template-Literals-vs-HandleBars-in-Node/</id>
    <published>2016-05-27T06:11:31.000Z</published>
    <updated>2016-05-27T06:47:56.000Z</updated>
    
    <content type="html">&lt;p&gt;This article looks at which is the fastest in between &lt;a href=&quot;http://handlebarsjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Handlebars&lt;/a&gt; and &lt;a href=&quot;http://exploringjs.com/es6/ch_template-literals.html#_text-templating-via-untagged-template-literals&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ES6 Template Literals&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h2&gt;&lt;p&gt;For my simple example and with node v5.6.0, I have found that &lt;strong&gt;ES6 Template literals are up to 4 times faster than Handlebars&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code&quot;&gt;&lt;a href=&quot;#Code&quot; class=&quot;headerlink&quot; title=&quot;Code&quot;&gt;&lt;/a&gt;Code&lt;/h2&gt;&lt;h3 id=&quot;Test-Template&quot;&gt;&lt;a href=&quot;#Test-Template&quot; class=&quot;headerlink&quot; title=&quot;Test Template&quot;&gt;&lt;/a&gt;Test Template&lt;/h3&gt;&lt;p&gt;For these tests, I have chosen to use the basic example from the &lt;a href=&quot;http://handlebarsjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Handlebars&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;The aim is to compile:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;entry&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;title&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&amp;#123;body&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;With the data being:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;, body: &lt;span class=&quot;string&quot;&gt;&quot;This is my first post!&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We will then compare the execution time when compiling this template 10000 times.&lt;/p&gt;
&lt;h3 id=&quot;Handlebars-code&quot;&gt;&lt;a href=&quot;#Handlebars-code&quot; class=&quot;headerlink&quot; title=&quot;Handlebars code&quot;&gt;&lt;/a&gt;Handlebars code&lt;/h3&gt;&lt;p&gt;Install Handlebars with npm:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save handlebars&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Full test code:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Handlebars = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;handlebars&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create a string with the Template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handlebarsTemplateSource = &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=\&quot;entry\&quot;&amp;gt;/n&amp;lt;h1&amp;gt;&amp;#123;&amp;#123;title&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;/n&amp;lt;div class=\&quot;body\&quot;&amp;gt;/n&amp;#123;&amp;#123;&amp;#123;body&amp;#125;&amp;#125;&amp;#125;/n&amp;lt;/div&amp;gt;/n&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Compile the template source to create the template function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handlebarsTemplate = Handlebars.compile(handlebarsTemplateSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Initialize the data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = &amp;#123;title: &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;, body: &lt;span class=&quot;string&quot;&gt;&quot;This is my first post!&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; results = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Perf test start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;string&quot;&gt;&quot;Handlebars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; i = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Evaluate the template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  results.push(handlebarsTemplate(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Perf test end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;string&quot;&gt;&quot;Handlebars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;On my machine the code executes at an average speed of &lt;strong&gt;20.113ms&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;ES6-Template-Literals&quot;&gt;&lt;a href=&quot;#ES6-Template-Literals&quot; class=&quot;headerlink&quot; title=&quot;ES6 Template Literals&quot;&gt;&lt;/a&gt;ES6 Template Literals&lt;/h3&gt;&lt;p&gt;The idea of a literal template is to use an arrow function with ES6’s string interpolation capabilities.&lt;/p&gt;
&lt;p&gt;Here is an example of a simple ES6 template literal&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = data =&amp;gt; &lt;span class=&quot;string&quot;&gt;`&amp;lt;div&amp;gt;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;data&amp;#125;&lt;/span&gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The Handlebars equivalent would be:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; source = &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div&amp;gt;&amp;#123;&amp;#123;data&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = Handlebars.compile(source);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You can read more about ES6 Template literals &lt;a href=&quot;http://exploringjs.com/es6/ch_template-literals.html#_text-templating-via-untagged-template-literals&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. But in the meantime here is the full performance test code:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6 Template Literal Definition&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; template = data =&amp;gt; &lt;span class=&quot;string&quot;&gt;`&amp;lt;div class=&quot;entry&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;h1&amp;gt;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;data.title&amp;#125;&lt;/span&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div class=&quot;body&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;subst&quot;&gt;$&amp;#123;data.body&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Initialize the data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = &amp;#123;title: &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;, body: &lt;span class=&quot;string&quot;&gt;&quot;This is my first post!&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; results = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Perf test start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.time(&lt;span class=&quot;string&quot;&gt;&quot;Handlebars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; i = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Evaluate the template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  results.push(template(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Perf test end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.timeEnd(&lt;span class=&quot;string&quot;&gt;&quot;Handlebars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;On my machine the code executes at an average speed of &lt;strong&gt;5.007ms&lt;/strong&gt;. That is &lt;strong&gt;4 time faster&lt;/strong&gt; than Handlebars. &lt;/p&gt;
&lt;p&gt;This is quite good news I think as it means I will now start using this native ES6 feature instead of an external library. Have you experienced something similar ? Let me know in the comments.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This article looks at which is the fastest in between &lt;a href=&quot;http://handlebarsjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Handlebars&lt;/a&gt; an
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="ES6" scheme="http://www.codeblocq.com/tags/ES6/"/>
    
      <category term="Templating" scheme="http://www.codeblocq.com/tags/Templating/"/>
    
      <category term="Handlebars" scheme="http://www.codeblocq.com/tags/Handlebars/"/>
    
  </entry>
  
  <entry>
    <title>Blur Image on Hover with CSS</title>
    <link href="http://www.codeblocq.com/2016/05/Blur-Image-on-Hover-with-CSS/"/>
    <id>http://www.codeblocq.com/2016/05/Blur-Image-on-Hover-with-CSS/</id>
    <published>2016-05-25T08:02:47.000Z</published>
    <updated>2016-05-25T08:18:19.000Z</updated>
    
    <content type="html">&lt;p&gt;Quick little trick to blur an image on mouse hover.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;vKBGBY&quot; data-default-tab=&quot;result&quot; data-user=&quot;klugjo&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/klugjo/pen/vKBGBY/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hover Image Blur&lt;/a&gt; by Jonathan klughertz (&lt;a href=&quot;http://codepen.io/klugjo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@klugjo&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;Gist&quot;&gt;&lt;a href=&quot;#Gist&quot; class=&quot;headerlink&quot; title=&quot;Gist&quot;&gt;&lt;/a&gt;Gist&lt;/h2&gt;&lt;p&gt;To add blur to an image on mouse, use the following CSS properties:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(4px); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(4px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;webkit-filter&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; CSS properties can be used with the blur &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/filter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;filter function&lt;/a&gt;&lt;br&gt;The &lt;code&gt;:hover&lt;/code&gt; pseudo class is used to apply the filter on mouse over&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Quick little trick to blur an image on mouse hover.&lt;br&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://www.codeblocq.com/tags/CSS/"/>
    
      <category term="Hover" scheme="http://www.codeblocq.com/tags/Hover/"/>
    
      <category term="Blur" scheme="http://www.codeblocq.com/tags/Blur/"/>
    
  </entry>
  
  <entry>
    <title>Expose your local website to the world with ngrok</title>
    <link href="http://www.codeblocq.com/2016/05/Expose-your-local-website-to-the-world-with-ngrok/"/>
    <id>http://www.codeblocq.com/2016/05/Expose-your-local-website-to-the-world-with-ngrok/</id>
    <published>2016-05-24T08:13:18.000Z</published>
    <updated>2016-05-24T08:52:40.000Z</updated>
    
    <content type="html">&lt;p&gt;This article will show you how to tunnel your locally running website out to the world using &lt;a href=&quot;https://ngrok.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ngrok&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;You have been working on a local version of your express app that runs smoothly on your &lt;a href=&quot;http://localhost:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080&lt;/a&gt;. Your client is asking to see what progress has been made to the website and you don’t necessarily have hours to set it up on a cloud service provider.&lt;/p&gt;
&lt;p&gt;This is one of the cases where ngrok comes in handy. It allows you to redirect your local traffic to a public URL accesible anywhere in the world. Let’s get started.&lt;/p&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;I have tried to install &lt;a href=&quot;https://ngrok.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ngrok&lt;/a&gt; with brew, but it didn’t work (I ended up with an old version). &lt;a href=&quot;https://ngrok.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Download it from the website&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;br&gt;Unzip the package and put it somewhere where ou can easily access it. I am on OS X and I have put it in my &lt;code&gt;Applications&lt;/code&gt; folder so I can access it with:&lt;/p&gt;
&lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ /Applications/ngrok -&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Sign-up-and-get-a-authentication-token&quot;&gt;&lt;a href=&quot;#Sign-up-and-get-a-authentication-token&quot; class=&quot;headerlink&quot; title=&quot;Sign up and get a authentication token&quot;&gt;&lt;/a&gt;Sign up and get a authentication token&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://dashboard.ngrok.com/user/signup&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sign up&lt;/a&gt; for a free account with ngrok and get your auth token. Install the token with &lt;code&gt;authtoken&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;./ngrok authtoken abcde1234&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Create-your-first-tunnel&quot;&gt;&lt;a href=&quot;#Create-your-first-tunnel&quot; class=&quot;headerlink&quot; title=&quot;Create your first tunnel&quot;&gt;&lt;/a&gt;Create your first tunnel&lt;/h2&gt;&lt;p&gt;I am testing mine with my hexo blog running on &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt; but you can use whichever port you want, even your standard port 80.&lt;/p&gt;
&lt;p&gt;Run this command (replace the port number with yours)&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;/Applications/ngrok http &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/ngrok-status-online.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Tunnel Status&lt;/code&gt; should say &lt;code&gt;online&lt;/code&gt; and you will get a &lt;code&gt;Forwarding&lt;/code&gt; URL that looks something like &lt;a href=&quot;http://c9de2896.ngrok.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://c9de2896.ngrok.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Open that URL in your browser and look at all your website’s ressources being redirected from your local through ngrok.io.&lt;/p&gt;
&lt;p&gt;You can now use that URL and share it with you friends and clients.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This article will show you how to tunnel your locally running website out to the world using &lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="ngrok" scheme="http://www.codeblocq.com/tags/ngrok/"/>
    
      <category term="localhost" scheme="http://www.codeblocq.com/tags/localhost/"/>
    
      <category term="http" scheme="http://www.codeblocq.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Automatically extract interesting quotes from a text with Node JS</title>
    <link href="http://www.codeblocq.com/2016/05/Automatically-extract-interesting-quotes-from-a-text-with-Node-JS/"/>
    <id>http://www.codeblocq.com/2016/05/Automatically-extract-interesting-quotes-from-a-text-with-Node-JS/</id>
    <published>2016-05-19T22:36:31.000Z</published>
    <updated>2016-05-24T08:11:30.000Z</updated>
    
    <content type="html">&lt;p&gt;Getting start with pull-quoter and quote extraction in Node.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;The pull-quoter library allows you to extract interesting quotes from a text.&lt;/p&gt;
&lt;h3 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h3&gt;&lt;p&gt;Easy with npm:&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save pull-quoter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h3&gt;&lt;p&gt;Load the module and simply use it as a function.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pullquoter = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;pullquoter&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; text = &lt;span class=&quot;string&quot;&gt;&quot;Something I notice every time I get really [...] higher quality sleep every night.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(pullquoter(text)); &lt;span class=&quot;comment&quot;&gt;// [ &#39;It’s not just our thinking that’s affected by being tired.&#39; ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;pull-quoter&lt;/code&gt; will return an Array of Strings.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Getting start with pull-quoter and quote extraction in Node.&lt;br&gt;
    
    </summary>
    
    
      <category term="Node" scheme="http://www.codeblocq.com/tags/Node/"/>
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="Quotes" scheme="http://www.codeblocq.com/tags/Quotes/"/>
    
  </entry>
  
  <entry>
    <title>Get the Current Wifi Password with Node</title>
    <link href="http://www.codeblocq.com/2016/05/Get-the-Current-Wifi-Password-with-Node/"/>
    <id>http://www.codeblocq.com/2016/05/Get-the-Current-Wifi-Password-with-Node/</id>
    <published>2016-05-18T01:44:55.000Z</published>
    <updated>2016-05-18T03:14:28.000Z</updated>
    
    <content type="html">&lt;p&gt;Here is a library to retrieve some of your known wifi passwords in Node.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;Install the &lt;a href=&quot;https://github.com/kevva/wifi-password&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wifi-password&lt;/a&gt; library like so:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; wifi-&lt;span class=&quot;keyword&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;h3 id=&quot;Get-your-current-Wifi-password&quot;&gt;&lt;a href=&quot;#Get-your-current-Wifi-password&quot; class=&quot;headerlink&quot; title=&quot;Get your current Wifi password&quot;&gt;&lt;/a&gt;Get your current Wifi password&lt;/h3&gt;&lt;p&gt;Pretty straightforward:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; wifiPassword = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;wifi-password&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wifiPassword().then(password =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(password);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Get-another-known-Wifi-password&quot;&gt;&lt;a href=&quot;#Get-another-known-Wifi-password&quot; class=&quot;headerlink&quot; title=&quot;Get another known Wifi password&quot;&gt;&lt;/a&gt;Get another known Wifi password&lt;/h3&gt;&lt;p&gt;Simply pass the Wifi SSID as a parameter:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; wifiPassword = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;wifi-password&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wifiPassword(&lt;span class=&quot;string&quot;&gt;&#39;Wireless@CodeBlocQ&#39;&lt;/span&gt;).then(password =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(password);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Here is a library to retrieve some of your known wifi passwords in Node.&lt;br&gt;
    
    </summary>
    
    
      <category term="Node" scheme="http://www.codeblocq.com/tags/Node/"/>
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="Wifi" scheme="http://www.codeblocq.com/tags/Wifi/"/>
    
      <category term="Password" scheme="http://www.codeblocq.com/tags/Password/"/>
    
  </entry>
  
  <entry>
    <title>PDF Generation with Node JS</title>
    <link href="http://www.codeblocq.com/2016/05/PDF-Generation-with-Node-JS/"/>
    <id>http://www.codeblocq.com/2016/05/PDF-Generation-with-Node-JS/</id>
    <published>2016-05-17T09:03:59.000Z</published>
    <updated>2016-05-17T09:35:06.000Z</updated>
    
    <content type="html">&lt;p&gt;Get started creating PDF file with Node and &lt;a href=&quot;http://pdfkit.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDFKit&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; pdfkit &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;PDF-Creation&quot;&gt;&lt;a href=&quot;#PDF-Creation&quot; class=&quot;headerlink&quot; title=&quot;PDF Creation&quot;&gt;&lt;/a&gt;PDF Creation&lt;/h2&gt;&lt;h3 id=&quot;Setup&quot;&gt;&lt;a href=&quot;#Setup&quot; class=&quot;headerlink&quot; title=&quot;Setup&quot;&gt;&lt;/a&gt;Setup&lt;/h3&gt;&lt;p&gt;Import the library and create the pdfKit document&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PDFDocument, doc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PDFDocument = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;pdfkit&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PDFDocument;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc.pipe(fs.createWriteStream(&lt;span class=&quot;string&quot;&gt;&#39;output.pdf&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// PDF Creation logic goes here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc.end();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Insert-some-text&quot;&gt;&lt;a href=&quot;#Insert-some-text&quot; class=&quot;headerlink&quot; title=&quot;Insert some text&quot;&gt;&lt;/a&gt;Insert some text&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Set a title and pass the X and Y coordinates&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc.fontSize(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;Wally Gator !&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Set the paragraph width and align direction&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc.text(&lt;span class=&quot;string&quot;&gt;&#39;Wally Gator is a swinging alligator in the swamp. He\&#39;s the greatest percolator when he really starts to romp. There has never been a greater operator in the swamp. See ya later, Wally Gator.&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: &lt;span class=&quot;number&quot;&gt;410&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    align: &lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Check out the &lt;a href=&quot;http://pdfkit.org/docs/text.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more options, including fonts, colors, text decorations and more !&lt;/p&gt;
&lt;h3 id=&quot;Insert-an-image&quot;&gt;&lt;a href=&quot;#Insert-an-image&quot; class=&quot;headerlink&quot; title=&quot;Insert an image&quot;&gt;&lt;/a&gt;Insert an image&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;doc.image(&lt;span class=&quot;string&quot;&gt;&#39;wally.jpg&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;, &amp;#123;width: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Result&quot;&gt;&lt;a href=&quot;#Result&quot; class=&quot;headerlink&quot; title=&quot;Result&quot;&gt;&lt;/a&gt;Result&lt;/h3&gt;&lt;p&gt;Run the script as usual with&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;index&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And open the output.pdf file. You can check my &lt;a href=&quot;/img/output.pdf&quot;&gt;result here&lt;/a&gt;. Once again, don’t forget to check out the &lt;a href=&quot;http://pdfkit.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official documentation&lt;/a&gt; for more examples and information.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Get started creating PDF file with Node and &lt;a href=&quot;http://pdfkit.org/&quot;&gt;PDFKit&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="Node" scheme="http://www.codeblocq.com/tags/Node/"/>
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="PDF" scheme="http://www.codeblocq.com/tags/PDF/"/>
    
      <category term="PDFKit" scheme="http://www.codeblocq.com/tags/PDFKit/"/>
    
  </entry>
  
  <entry>
    <title>SHA-256 in Node</title>
    <link href="http://www.codeblocq.com/2016/05/SHA-256-in-Node/"/>
    <id>http://www.codeblocq.com/2016/05/SHA-256-in-Node/</id>
    <published>2016-05-14T07:25:59.000Z</published>
    <updated>2016-05-14T08:03:09.000Z</updated>
    
    <content type="html">&lt;p&gt;Useful piece of code to produce a 256-bit hash value with SHA-256:&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There a few JavaScript implementation of the SHA-256 hash function out there. But the easiest is usually to use Node’s built in &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_class_hash&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cryptography&lt;/a&gt; module.&lt;/p&gt;
&lt;h2 id=&quot;The-Code&quot;&gt;&lt;a href=&quot;#The-Code&quot; class=&quot;headerlink&quot; title=&quot;The Code&quot;&gt;&lt;/a&gt;The Code&lt;/h2&gt;&lt;p&gt;If you just need the code, here it is:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; crypto = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;crypto&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hash = crypto.createHash(&lt;span class=&quot;string&quot;&gt;&#39;sha256&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   .update(inputString)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   .digest(&lt;span class=&quot;string&quot;&gt;&#39;hex&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Details&quot;&gt;&lt;a href=&quot;#Details&quot; class=&quot;headerlink&quot; title=&quot;Details&quot;&gt;&lt;/a&gt;Details&lt;/h2&gt;&lt;h3 id=&quot;Generate-the-hash&quot;&gt;&lt;a href=&quot;#Generate-the-hash&quot; class=&quot;headerlink&quot; title=&quot;Generate the hash&quot;&gt;&lt;/a&gt;Generate the hash&lt;/h3&gt;&lt;p&gt;Import the &lt;code&gt;crypto&lt;/code&gt; module and use the &lt;code&gt;createHash&lt;/code&gt; function to generate the hash.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; crypto = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;crypto&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hash = crypto.createHash(&lt;span class=&quot;string&quot;&gt;&#39;sha256&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Hash-your-value&quot;&gt;&lt;a href=&quot;#Hash-your-value&quot; class=&quot;headerlink&quot; title=&quot;Hash your value&quot;&gt;&lt;/a&gt;Hash your value&lt;/h3&gt;&lt;p&gt;Use the &lt;code&gt;update&lt;/code&gt; function on the &lt;code&gt;hash&lt;/code&gt; object instance to process your input.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hash.update(&lt;span class=&quot;string&quot;&gt;&#39;CodeBlocQ&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Output&quot;&gt;&lt;a href=&quot;#Output&quot; class=&quot;headerlink&quot; title=&quot;Output&quot;&gt;&lt;/a&gt;Output&lt;/h3&gt;&lt;p&gt;Use the &lt;code&gt;digest&lt;/code&gt; function on the &lt;code&gt;hash&lt;/code&gt; to ouput the value. You can pass ‘hex’, ‘binary’ or ‘base64’ to get the result in the desired encoding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hex&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hex = hash.digest(&lt;span class=&quot;string&quot;&gt;&#39;hex&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(hex); &lt;span class=&quot;comment&quot;&gt;// c5d44424ef47ab9e1806d9c1a3045942cfd06e0ec5e798449c02e44e9ae38292&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Binary&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bin = hash.digest(&lt;span class=&quot;string&quot;&gt;&#39;binary&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bin); &lt;span class=&quot;comment&quot;&gt;// ÅÔD$ïG«ÙÁ£YBÏÐnÅçDäNã&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Base64&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; base64 = hash.digest(&lt;span class=&quot;string&quot;&gt;&#39;base64&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(base64); &lt;span class=&quot;comment&quot;&gt;// xdREJO9Hq54YBtnBowRZQs/Qbg7F55hEnALkTprjgpI=&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Useful piece of code to produce a 256-bit hash value with SHA-256:&lt;br&gt;
    
    </summary>
    
    
      <category term="Node" scheme="http://www.codeblocq.com/tags/Node/"/>
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="Cryptography" scheme="http://www.codeblocq.com/tags/Cryptography/"/>
    
      <category term="SHA256" scheme="http://www.codeblocq.com/tags/SHA256/"/>
    
  </entry>
  
  <entry>
    <title>Factory Pattern in JavaScript</title>
    <link href="http://www.codeblocq.com/2016/05/Factory-Pattern-in-JavaScript/"/>
    <id>http://www.codeblocq.com/2016/05/Factory-Pattern-in-JavaScript/</id>
    <published>2016-05-12T07:18:46.000Z</published>
    <updated>2016-05-12T09:10:39.000Z</updated>
    
    <content type="html">&lt;p&gt;Details on how to implement a simple Factory  Pattern in JavaScript.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Here is an example of code that could use some refactoring.&lt;/p&gt;
&lt;p&gt;Let’s say we have 4 plugins (plugin1, plugin2, ..) which all have different methods (exec1, exec2, ..).&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plugin1 = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./plugin1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plugin2 = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./plugin2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plugin3 = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./plugin3&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plugin4 = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./plugin4&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugin1.exec1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugin1.exec2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugin1.exec3();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugin1.exec4();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We are loading 4 plugins and call methods on these plugins. The problem comes from all the duplicated require statements at the beginning.&lt;/p&gt;
&lt;h2 id=&quot;Factory-Pattern&quot;&gt;&lt;a href=&quot;#Factory-Pattern&quot; class=&quot;headerlink&quot; title=&quot;Factory Pattern&quot;&gt;&lt;/a&gt;Factory Pattern&lt;/h2&gt;&lt;p&gt;Our Factory pattern can help us encapsulate the creation of all these objects.&lt;/p&gt;
&lt;p&gt;Meet the &lt;code&gt;pluginFactory&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;pluginFactory.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Plugin Factory Object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PluginFactory = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Plugin List&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plugins = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;propertyName: &lt;span class=&quot;string&quot;&gt;&#39;plugin1&#39;&lt;/span&gt;, path: &lt;span class=&quot;string&quot;&gt;&#39;./plugin1&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;propertyName: &lt;span class=&quot;string&quot;&gt;&#39;plugin2&#39;&lt;/span&gt;, path: &lt;span class=&quot;string&quot;&gt;&#39;./plugin2&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;propertyName: &lt;span class=&quot;string&quot;&gt;&#39;plugin3&#39;&lt;/span&gt;, path: &lt;span class=&quot;string&quot;&gt;&#39;./plugin3&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;propertyName: &lt;span class=&quot;string&quot;&gt;&#39;plugin4&#39;&lt;/span&gt;, path: &lt;span class=&quot;string&quot;&gt;&#39;./plugin4&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Enumerate through plugins and assign them to Object Properties&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; plugins.length; i = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[plugins[i].propertyName] = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(plugins[i].path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Export an instance of the Factory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PluginFactory();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In our client code (&lt;code&gt;index.js&lt;/code&gt;), we can write:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pluginFactory = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./pluginFactory&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pluginFactory.plugin1.exec1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pluginFactory.plugin2.exec2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pluginFactory.plugin3.exec3();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pluginFactory.plugin4.exec4();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We have direct access to the plugins and their methods. This is great because we have replaced all the require statements with one and we don’t need our client code (&lt;code&gt;index.js&lt;/code&gt;) to know about the plugins path anymore.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Details on how to implement a simple Factory  Pattern in JavaScript.&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.codeblocq.com/tags/JavaScript/"/>
    
      <category term="Design Pattern" scheme="http://www.codeblocq.com/tags/Design-Pattern/"/>
    
      <category term="Factory" scheme="http://www.codeblocq.com/tags/Factory/"/>
    
  </entry>
  
</feed>

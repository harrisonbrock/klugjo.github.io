<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[CodeBlocQ]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://klugjo.github.io/"/>
  <updated>2016-03-30T05:21:30.000Z</updated>
  <id>http://klugjo.github.io/</id>
  
  <author>
    <name><![CDATA[Klughertz Jonathan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Setup ESLint in Atom]]></title>
    <link href="http://klugjo.github.io/2016/03/Setup-ESLint-in-Atom/"/>
    <id>http://klugjo.github.io/2016/03/Setup-ESLint-in-Atom/</id>
    <published>2016-03-30T02:39:07.000Z</published>
    <updated>2016-03-30T05:21:30.000Z</updated>
    <content type="html"><![CDATA[<p>This article will show you how to setup <a href="http://eslint.org/" target="_blank" rel="external">ESLint</a> syntax highlighting (or in that case error highlighting) directly in <a href="https://atom.io/" target="_blank" rel="external">Atom</a>.</p>
<a id="more"></a>
<h2 id="Install_the_packages">Install the packages</h2><p>Start by going to Atom’s preferences and select the <strong>+ Install</strong> tab.</p>
<p><img src="/img/atom-prefs-install-tab.png" alt=""></p>
<p>Then install the <strong>linter</strong> package</p>
<p><img src="/img/atom-linter-package.png" alt=""></p>
<p>Then the <strong>linter-eslint</strong> package</p>
<p><img src="/img/atom-linter-eslint-package.png" alt=""></p>
<h2 id="Setup_ESLint">Setup ESLint</h2><p>All you need to setup ESLint is an <code>.eslintrc</code> file at the root of your project with your ESlint rules.</p>
<p>If you want to get started quickly you can use Google’s JavaScript guide rules:</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install </span>--save-dev eslint eslint-<span class="built_in">config</span>-google</span><br></pre></td></tr></table></figure>
<p>and in your <code>.eslintrc</code>, put:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: <span class="string">"eslint-config-google"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Test_it_out">Test it out</h2><p>If Atom does not automatically pick up the errors, restart the application.</p>
<p>This is what you should get once everything is setup properly:</p>
<p><img src="/img/atom-eslint-error-highlighting.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This article will show you how to setup <a href="http://eslint.org/">ESLint</a> syntax highlighting (or in that case error highlighting) directly in <a href="https://atom.io/">Atom</a>.</p>]]>
    
    </summary>
    
      <category term="Tools" scheme="http://klugjo.github.io/tags/Tools/"/>
    
      <category term="ESLint" scheme="http://klugjo.github.io/tags/ESLint/"/>
    
      <category term="Atom" scheme="http://klugjo.github.io/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[New Hexo Theme: Magnetic]]></title>
    <link href="http://klugjo.github.io/2016/03/New-Hexo-Theme-Magnetic/"/>
    <id>http://klugjo.github.io/2016/03/New-Hexo-Theme-Magnetic/</id>
    <published>2016-03-29T08:34:13.000Z</published>
    <updated>2016-03-29T08:36:29.000Z</updated>
    <content type="html"><![CDATA[<p>I just finished developing a new Hexo Theme: <a href="https://github.com/klugjo/hexo-theme-magnetic" target="_blank" rel="external">Magnetic</a>. Check out the <a href="http://www.codeblocq.com/assets/projects/hexo-theme-magnetic/" target="_blank" rel="external">live demo</a>.</p>
<a id="more"></a>
<p>Magnetic is an Hexo implementation of the free <a href="http://pixelhint.com/magnetic-free-html5-responsive-photography-website-template/" target="_blank" rel="external">HTML5 Magnetic Template</a></p>
<h2 id="Features_Overview">Features Overview</h2><ul>
<li>Disqus and Facebook comments</li>
<li>Google Analytics</li>
<li>Cover image for posts and pages</li>
<li>Tags Support</li>
<li>Responsive Images</li>
<li>Image Gallery</li>
<li>Social Accounts configuration</li>
<li>Pagination</li>
</ul>
<h2 id="Not_Supported">Not Supported</h2><ul>
<li>Post Categories will not be displayed</li>
<li>Posts and Pages Dates not displayed anywhere </li>
</ul>
<h2 id="External_libraries_used">External libraries used</h2><ul>
<li><a href="http://noelboss.github.io/featherlight/" target="_blank" rel="external">FeatherLight.js</a> (Gallery)</li>
<li><a href="https://jquery.com/" target="_blank" rel="external">jQuery</a></li>
</ul>
<h2 id="Installation">Installation</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/klugjo/hexo-theme-magnetic magnetic</span><br></pre></td></tr></table></figure>
<p>Then update your blog’s main <code>_config.yml</code> to set the theme to <code>magnetic</code>:</p>
<p>i.e:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Extensions</span></span><br><span class="line"><span class="meta">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">## Themes: http:<span class="comment">//hexo.io/themes/</span></span></span><br><span class="line"><span class="symbol">theme:</span> magnetic</span><br></pre></td></tr></table></figure>
<h2 id="Theme_Configuration">Theme Configuration</h2><p>The theme’s global configuration is done in <code>/themes/hexo-theme-magnetic/_config.yml</code>.</p>
<h3 id="Menu">Menu</h3><p>The menu is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Header</span></span><br><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  Home:</span> /</span><br><span class="line"><span class="symbol">  Archives:</span> /archives</span><br></pre></td></tr></table></figure>
<p>The object key is the label and the value is the path.</p>
<h3 id="Default_post_title">Default post title</h3><p>The default post title (used when no title is specified) is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Default post title</span></span><br><span class="line"><span class="symbol">default_post_title:</span> Untitled</span><br></pre></td></tr></table></figure>
<h3 id="Default_index_page_cover_image">Default index page cover image</h3><p>You can specify a default thumbnail for posts on the index page (Home page). This image will be used if you forget to specify an image in the post’s front matter.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Default post cover index page</span></span><br><span class="line"><span class="symbol">default_cover_index:</span> <span class="string">"http://placehold.it/450x450"</span></span><br></pre></td></tr></table></figure>
<h3 id="Default_post_page_cover_image">Default post page cover image</h3><p>You can specify a default thumbnail for posts/pages on the post/page page (Detail Page). This image will be used if you forget to specify an image in the post’s front matter.</p>
<h1 id="Default_post_cover_index_page">Default post cover index page</h1><p>default_cover_detail: “<a href="http://placehold.it/1300x500" target="_blank" rel="external">http://placehold.it/1300x500</a>“</p>
<h3 id="Comments">Comments</h3><p>The comments provider is specified in the theme’s <code>_config.yml</code>. If you specify both a <code>disqus_shortname</code> and a <code>facebook.appid</code> there will be 2 sets of comment per post. So choose one.</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comments. Choose one by filling up the information</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Disqus comments</span></span><br><span class="line"><span class="attr">  disqus_shortname:</span> klugjotest</span><br><span class="line">  <span class="comment"># Facebook comments</span></span><br><span class="line"><span class="attr">  facebook:</span></span><br><span class="line"><span class="attr">    appid:</span> <span class="number">123456789012345</span></span><br><span class="line"><span class="attr">    comment_count:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">    comment_colorscheme:</span> light</span><br></pre></td></tr></table></figure>
<h3 id="Google_Analytics">Google Analytics</h3><p>The Google Analytics Tracking ID is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Google Analytics Tracking ID</span></span><br><span class="line"><span class="symbol">google_analytics:</span></span><br></pre></td></tr></table></figure>
<h3 id="Social_Account">Social Account</h3><p>Setup the links to your social pages in the theme’s <code>_config.yml</code>. Links are in the footer.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Social Accounts</span></span><br><span class="line"><span class="symbol">twitter_url:</span></span><br><span class="line"><span class="symbol">facebook_url:</span></span><br><span class="line"><span class="symbol">behance_url:</span></span><br><span class="line"><span class="symbol">googleplus_url:</span></span><br><span class="line"><span class="symbol">dribble_url:</span> </span><br><span class="line"><span class="symbol">rss_url:</span></span><br></pre></td></tr></table></figure>
<h2 id="Post_Custom_Configuration">Post Custom Configuration</h2><p>For each post, you can specify additional information in the <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="external">front matter</a></p>
<h3 id="Post’s_Index_Thumbnail">Post’s Index Thumbnail</h3><p>Use <code>cover_index</code> to specify an image that will be used for that post on the Home page (also knows as index)</p>
<p>Example:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cover_index:</span> <span class="meta-keyword">/assets/</span>work1.jpg</span><br></pre></td></tr></table></figure>
<h3 id="Post’s_Detail_Thumbnail">Post’s Detail Thumbnail</h3><p>Use <code>cover_detail</code> to specify an image that will be used for that post on the Detail page for that post.</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cover_detail:</span> <span class="meta-keyword">/assets/</span>hero_image.jpg</span><br></pre></td></tr></table></figure>
<h2 id="Creator">Creator</h2><p>This theme was created by <a href="http://pixelhint.com/" target="_blank" rel="external">Pixel Hint</a> and adapted for Hexo by <a href="http://www.codeblocq.com/" target="_blank" rel="external">Jonathan Klughertz</a>.</p>
<h2 id="Bugs">Bugs</h2><p>If you have a question, feature request or a bug you need me to fix, please <a href="https://github.com/klugjo/hexo-theme-magnetic/issues/new" target="_blank" rel="external">click here</a> to file an issue.</p>
<p>Hope you enjoy it, the theme should be easy enough to customize and modify to fit your needs. Checkout <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">my tutorial on building Hexo themes</a> if you need information on how themes are built.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I just finished developing a new Hexo Theme: <a href="https://github.com/klugjo/hexo-theme-magnetic">Magnetic</a>. Check out the <a href="http://www.codeblocq.com/assets/projects/hexo-theme-magnetic/">live demo</a>.</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://klugjo.github.io/tags/Hexo/"/>
    
      <category term="Theme" scheme="http://klugjo.github.io/tags/Theme/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Remote Web debugging with Vorlon.js]]></title>
    <link href="http://klugjo.github.io/2016/03/Remote-Web-debugging-with-Vorlon-js/"/>
    <id>http://klugjo.github.io/2016/03/Remote-Web-debugging-with-Vorlon-js/</id>
    <published>2016-03-23T07:23:32.000Z</published>
    <updated>2016-03-29T06:36:13.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://vorlonjs.com/" target="_blank" rel="external">VorlonJS</a> is a newcomer in the remote web debugging tool. I have not used it a lot but after giving it a try here are my findings:</p>
<a id="more"></a>
<ul>
<li>It has pretty much the same features as <a href="/2016/03/Remote-Web-Debugging-with-weinre/">weinre</a></li>
<li>Very neat UX and interface</li>
<li>Built in Node</li>
<li>Gives you the standard dev tools options (Console, DOM, Object Explorer)</li>
<li>Possibility to add plugins to Run Unit Tests, capture network traffic</li>
<li>They have desktop apps as well </li>
<li>Free and Open Source</li>
</ul>
<p>Overall a very solid product that you should definitely checkout if you need a remote debugging tool</p>
<h2 id="How_to_get_started">How to get started</h2><p>Here is a straight to the point guide on how to get started.</p>
<h3 id="Step_1:_Install_Vorlon">Step 1: Install Vorlon</h3><p>With npm</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> -g vorlon</span><br></pre></td></tr></table></figure>
<h3 id="Step_2:_Start_the_Vorlon_server">Step 2: Start the Vorlon server</h3><p>One simple command</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vorlon</span><br></pre></td></tr></table></figure>
<p>then open your browser at <code>http://localhost:1337/</code></p>
<h3 id="Step_3:_Insert_the_script_in_your_app">Step 3: Insert the script in your app</h3><p>In the <code>&lt;head&gt;</code> of your app, insert the following:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://localhost:1337/vorlon.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>At this point, I highly recommend that you replace localhost with the IP of your app.</strong> Use something like <code>&lt;script src=&quot;http://192.168.83.100:1337/vorlon.js&quot;&gt;&lt;/script&gt;</code>.</p>
<h3 id="Step_4:_Start_debugging">Step 4: Start debugging</h3><p>Reload your app and you can start debugging.</p>
<p>Experiment with the features, I really like the DOM explorer and console which are available on app start. The Obj Explorer can be useful as well.</p>
<p>I have had some difficulties with the other features but it might work out well for you.</p>
<h2 id="Conclusion">Conclusion</h2><p>A tool I have not used much but will try to incorporate in my tool box. Will keep you guys posted.</p>
<p>Check out the <a href="http://vorlonjs.com/#getting-started" target="_blank" rel="external">introduction video tutorial</a> on their website if you want to know more.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://vorlonjs.com/">VorlonJS</a> is a newcomer in the remote web debugging tool. I have not used it a lot but after giving it a try here are my findings:</p>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Debugging" scheme="http://klugjo.github.io/tags/Debugging/"/>
    
      <category term="Tools" scheme="http://klugjo.github.io/tags/Tools/"/>
    
      <category term="Vorlon" scheme="http://klugjo.github.io/tags/Vorlon/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Remote Web Debugging with weinre]]></title>
    <link href="http://klugjo.github.io/2016/03/Remote-Web-Debugging-with-weinre/"/>
    <id>http://klugjo.github.io/2016/03/Remote-Web-Debugging-with-weinre/</id>
    <published>2016-03-22T08:41:13.000Z</published>
    <updated>2016-03-23T08:56:26.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://people.apache.org/~pmuellr/weinre/docs/latest/Home.html" target="_blank" rel="external">Weinre</a> is a great remote web debugging tool. It allows to you to quickly setup a ‘chrome dev tools’-like interface for any of your app. It comes in really handy when debugging an app on a device that does not have advanced debugging tools, think mobile, smart TVs, wearables and so on ..</p>
<p>Weinre is free, open source and runs on Node.</p>
 <a id="more"></a>
<h2 id="Why_use_weinre">Why use weinre</h2><h3 id="Weinre_is_really_useful_when:">Weinre is really useful when:</h3><ul>
<li>You need to have access to the DOM on a remote device and do some CSS tweaks</li>
<li>You want to access the JS log output</li>
<li>You want to check the network connections and what is going through the network</li>
<li>You want all of that in a tool that runs on Node.</li>
</ul>
<h3 id="Weinre_won’t_be_of_any_help_when:">Weinre won’t be of any help when:</h3><ul>
<li>You want to debug a device that is not in the same local network as yours. Check out <a href="/2016/03/Remote-JavaScript-debugging-with-jsconsole/">JSConsole</a>.</li>
<li>You can’t modify your app’s code</li>
</ul>
<h2 id="How_to_get_started">How to get started</h2><p>Here is a straight to the point guide on how to get started.</p>
<h3 id="Step_1:_Install_weinre">Step 1: Install weinre</h3><p>Easy with npm</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm -g <span class="keyword">install</span> weinre</span><br></pre></td></tr></table></figure>
<h3 id="Step_2:_Start_the_weinre_server">Step 2: Start the weinre server</h3><p>The weinre server will inject some JavaScript in your app through a script to allow the debugging to happen.</p>
<p>Technically, using <code>weinre</code> is enough to start the server but here are 2 useful options that you might as well pick up straight away:</p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">$</span> <span class="comment">weinre</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">boundHost</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">123</span><span class="string">.</span><span class="comment">1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">httpPort</span> <span class="comment">8888</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>--boundHost</code> defaults to localhost -&gt; <strong>use your own IP instead</strong>. Localhost won’t mean [your machine] anymore when you are on your remote device.</li>
<li><code>--httpPort</code> defaults to 8080 which is also commonly used so save yourself some issues down the line and change it to something else.</li>
</ul>
<h3 id="Step_3:_Insert_the_script_in_your_app">Step 3: Insert the script in your app</h3><p>In the <code>&lt;head&gt;</code> of your code, add the weinre script tag:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://192.168.123.1:8888/target/target-script-min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>(Replace the IP with your machine’s IP and the port with whatever port you are using)</p>
<p>Reload or launch your app on the device under test (or simply in your browser).</p>
<h3 id="Step_4:_Start_debugging">Step 4: Start debugging</h3><ul>
<li>Open a browser (Chrome or Safari are supported) and go to: <code>http://192.168.123.1:8888</code> or the equivalent for your IP and Port.</li>
<li>Click on the first link: Access points &gt; debug client user interface. (Something like <a href="http://192.168.123.1:8888/client/#anonymous" target="_blank" rel="external">http://192.168.123.1:8888/client/#anonymous</a>)</li>
<li>Your device should appear under Targets. Click on the corresponding link and you are ready to go.</li>
</ul>
<p>The debugging tools are quite similar to browser’s dev tools so I am sure you can take it from there :)</p>
<h2 id="Conclusion">Conclusion</h2><p>Give it a try and see if it fits your needs. Weinre is an excellent tool, I have used it a lot, keep it in mind and you will soon find tons of real life situations where this is useful.</p>
<p>Check out <a href="http://people.apache.org/~pmuellr/weinre/docs/latest/Installing.html" target="_blank" rel="external">the docs</a> for more info.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://people.apache.org/~pmuellr/weinre/docs/latest/Home.html">Weinre</a> is a great remote web debugging tool. It allows to you to quickly setup a ‘chrome dev tools’-like interface for any of your app. It comes in really handy when debugging an app on a device that does not have advanced debugging tools, think mobile, smart TVs, wearables and so on ..</p>
<p>Weinre is free, open source and runs on Node.</p>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Debugging" scheme="http://klugjo.github.io/tags/Debugging/"/>
    
      <category term="Tools" scheme="http://klugjo.github.io/tags/Tools/"/>
    
      <category term="Weinre" scheme="http://klugjo.github.io/tags/Weinre/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Remote JavaScript debugging with JSConsole]]></title>
    <link href="http://klugjo.github.io/2016/03/Remote-JavaScript-debugging-with-jsconsole/"/>
    <id>http://klugjo.github.io/2016/03/Remote-JavaScript-debugging-with-jsconsole/</id>
    <published>2016-03-22T06:21:20.000Z</published>
    <updated>2016-03-22T09:28:34.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://jsconsole.com/" target="_blank" rel="external">JSConsole</a> is one of the easiest way to get your JavaScript logs when your app is executing on a remote platform (Mobile, SmartTV or any web browser based device really). It is free to use and open source.</p>
<a id="more"></a>
<h2 id="Why_use_JSConsole">Why use JSConsole</h2><h3 id="JSConsole_is_really_useful_when:">JSConsole is really useful when:</h3><ul>
<li>You don’t need a complete remote dev tools but just the <code>console.log()</code> outputs</li>
<li>You need a nicely presented console. The font is resizable which makes it really useful when doing a live coding presentation for example.</li>
<li>You need to quickly remote debug something. You can use <a href="http://jsconsole.com/" target="_blank" rel="external">http://jsconsole.com/</a> directly and you don’t have to setup a local server.</li>
<li>You want to see real time log for an app that is being used the other side of the world. You don’t have to be in the same network, which makes it very easy to use with your QA team or client, thousands of kilometers away.</li>
</ul>
<h3 id="JSConsole_is_not_the_right_choice_when:">JSConsole is not the right choice when:</h3><ul>
<li>You want to understand the DOM structure of the app and test some CSS changes.</li>
<li>You want to observe network calls being made</li>
<li>You want to debug JavaScript execution</li>
</ul>
<p>(Note: if you are looking for full featured web debugging, checkout <a href="/2016/03/Remote-Web-Debugging-with-weinre/">weinre</a>)</p>
<h2 id="How_to_get_started">How to get started</h2><p>Here is a straight to the point, step by step guide, on how to get started.</p>
<h3 id="Step_1:_Get_the_JSConsole_&lt;script&gt;_tag:">Step 1: Get the JSConsole <code>&lt;script&gt;</code> tag:</h3><p>Go to <a href="http://jsconsole.com/" target="_blank" rel="external">http://jsconsole.com/</a>.<br>Type <code>:listen</code> in the textbox.<br>Press Enter.</p>
<p>This will print out a <code>&lt;script&gt;</code> tag, something like</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://jsconsole.com/js/remote.js?dc69ca75-55bf-405c-aad8-cbd10262bb17"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Step_2:_Insert_the_script_in_your_code">Step 2: Insert the script in your code</h3><p>In the <code>&lt;head&gt;</code> of your code, add the JSConsole script tag.</p>
<p>Reload or launch your app on the device under test (or simply in your browser).</p>
<p>The logs will start showing on the <a href="http://jsconsole.com/" target="_blank" rel="external">http://jsconsole.com/</a> virtual console</p>
<h3 id="Step_3_(Optional):_Save_the_URL_for_future_use">Step 3 (Optional): Save the URL for future use</h3><p>In the JSConsole, type <code>:listen [Your GUID]</code>. In my example, that would be:</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">listen</span> dc69ca75<span class="number">-55</span>bf<span class="number">-405</span>c-aad8-cbd10262bb17</span><br></pre></td></tr></table></figure>
<p>See how the URL of the page has changed ? Mine is:</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://jsconsole.com/?<span class="number">%3</span>Alisten<span class="number">%20</span>dc69ca75-55bf-405c-aad8-cbd10262bb17</span><br></pre></td></tr></table></figure>
<p>This URL will automatically launch JSConsole and start listening to your app’s logs.</p>
<ul>
<li>Share this URL with your colleagues or friends so that they can see the log as well.</li>
<li>Save it for future use (for example tomorrow, when you want to continue development/debugging).</li>
</ul>
<h2 id="Conclusion">Conclusion</h2><p>Give it a try and see by yourself, JSConsole is really good at what it does. There are so many scenarios where it can be useful.</p>
<p>Check out the <a href="https://github.com/remy/jsconsole" target="_blank" rel="external">Github Repo</a> for more info.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://jsconsole.com/">JSConsole</a> is one of the easiest way to get your JavaScript logs when your app is executing on a remote platform (Mobile, SmartTV or any web browser based device really). It is free to use and open source.</p>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Debugging" scheme="http://klugjo.github.io/tags/Debugging/"/>
    
      <category term="JSConsole" scheme="http://klugjo.github.io/tags/JSConsole/"/>
    
      <category term="Tools" scheme="http://klugjo.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Setup ESLint in WebStorm]]></title>
    <link href="http://klugjo.github.io/2016/03/Setup-ESLint-in-WebStorm/"/>
    <id>http://klugjo.github.io/2016/03/Setup-ESLint-in-WebStorm/</id>
    <published>2016-03-20T03:57:06.000Z</published>
    <updated>2016-03-20T04:46:41.000Z</updated>
    <content type="html"><![CDATA[<p>Setting up ESLint in WebStorm turned out to be a bit more complicated (hear time consuming) that I initially thought it would be.</p>
<p>Here are the steps:</p>
<a id="more"></a>
<h2 id="Install_ESLint">Install ESLint</h2><p>Use npm to add ESLint to your project</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> eslint</span><br></pre></td></tr></table></figure>
<h2 id="Choose_the_right_plugin">Choose the right plugin</h2><p>WebStorm ships with an <a href="https://www.jetbrains.com/help/webstorm/2016.1/using-javascript-code-quality-tools.html?origin=old_help#installESLint" target="_blank" rel="external">ESLint plugin built in</a>. I suggest you use it. I have tried to use a 3rd party plugin and ran into several issues I have not been to resolve.</p>
<p>In OS X, the plugin is located in:</p>
<p><strong>WebStorm &gt; Preferences &gt; Languages and Frameworks &gt; JavaScript &gt; Code Quality Tools &gt; ESLint</strong></p>
<h2 id="ESLint_plugin_Configuration">ESLint plugin Configuration</h2><p>Go ahead and enable the plugin by clicking the checkbox</p>
<h3 id="Path_to_Node_Interpreter">Path to Node Interpreter</h3><p>Fill in the node path. On OS X, the standard path is <code>/usr/local/bin/node</code>, if you are using <a href="https://github.com/creationix/nvm" target="_blank" rel="external">NVM</a>, it will be something like <code>~/.nvm/versions/node/v5.6.0/bin/node</code>.</p>
<h3 id="Path_to_ESlint">Path to ESlint</h3><p>Fill in the path to ESlint by setting the path to <u>the eslint node package folder installed locally</u>. Do not set the path to the <code>/bin</code> subdirectory like we did with node. I also suggest you <strong>don’t use</strong> a globally installed ESLint package if you have one.</p>
<p>The correct path should look something like <code>&lt;path to project&gt;/node_modules/eslint</code>.</p>
<h3 id="-eslintrc">.eslintrc</h3><p>Use the defaults for the remaining options:</p>
<ul>
<li>let Webstorm search for the <code>.eslintrc</code> file</li>
<li>Additional rules directory remains empty</li>
<li>Extra eslint options remains empty as well</li>
</ul>
<h2 id="ESLint_configuration">ESLint configuration</h2><p>As it is, ESLint does not do much since we have not specified any rules.</p>
<h3 id="Pick_a_Style_Guide">Pick a Style Guide</h3><p>For this example I will be using <a href="https://google.github.io/styleguide/javascriptguide.xml" target="_blank" rel="external">Google’s JavaScript Style Guide</a> and the corresponding <a href="https://github.com/google/eslint-config-google" target="_blank" rel="external">ESLint plugin</a>. <a href="https://github.com/airbnb/javascript" target="_blank" rel="external">Airbnb’s Javascript Style Guide</a> is just as popular so check it out and choose one you like.</p>
<h3 id="Install_the_ESLint_package_locally:">Install the ESLint package locally:</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install </span>--save-dev eslint-<span class="built_in">config</span>-google</span><br></pre></td></tr></table></figure>
<h3 id="Setup_the_-eslintrc">Setup the .eslintrc</h3><p>The ESLint configuration resides in a <code>.eslintrc</code> placed at the root of the project (alongside your <code>package.json</code>).</p>
<p>In the config file, the only thing we need to do is to tell ESLint to use the Google’s style guide:</p>
<figure class="highlight javascript"><figcaption><span>.eslintrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"extends"</span>: <span class="string">"eslint-config-google"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://eslint.org/docs/developer-guide/shareable-configs.html#using-a-shareable-config" target="_blank" rel="external">ESLint allows you to remove</a> the <code>eslint-config-</code> prefix so we can simply use:</p>
<figure class="highlight javascript"><figcaption><span>.eslintrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"extends"</span>: <span class="string">"google"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Start_coding_:)">Start coding :)</h2><p>That’s it, you are set. You might have to restart WebStorm if it does not pick up the new configuration immediately but after that you are good to go.</p>
<p>Any problem ? Let me know in the comments. Thanks for reading !</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Setting up ESLint in WebStorm turned out to be a bit more complicated (hear time consuming) that I initially thought it would be.</p>
<p>Here are the steps:</p>]]>
    
    </summary>
    
      <category term="Node" scheme="http://klugjo.github.io/tags/Node/"/>
    
      <category term="WebStorm" scheme="http://klugjo.github.io/tags/WebStorm/"/>
    
      <category term="OS X" scheme="http://klugjo.github.io/tags/OS-X/"/>
    
      <category term="Tools" scheme="http://klugjo.github.io/tags/Tools/"/>
    
      <category term="ESLint" scheme="http://klugjo.github.io/tags/ESLint/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pure and Impure Functions]]></title>
    <link href="http://klugjo.github.io/2016/03/Pure-and-Impure-Functions/"/>
    <id>http://klugjo.github.io/2016/03/Pure-and-Impure-Functions/</id>
    <published>2016-03-15T08:24:00.000Z</published>
    <updated>2016-03-20T04:51:14.000Z</updated>
    <content type="html"><![CDATA[<p>Quick run through on what pure and impure functions are. </p>
<p>I am looking at adapting one of my current old school MVC project to use Redux for state management. Since Redux makes use of the concept of pure functions, I thought I would lay it down here.<br><a id="more"></a></p>
<h2 id="Pure_Function">Pure Function</h2><h3 id="Definition">Definition</h3><p>A function is <strong>considered pure</strong> if:</p>
<p>a) It always returns the same value when given the same arguments<br>b) It does not modify anything (arguments, state, database, I/O, ..)</p>
<h3 id="Examples_of_Pure_Functions_(in_JavaScript)">Examples of Pure Functions (in JavaScript)</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(x, y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLength</span><span class="params">(array)</span> &#123;</span></span><br><span class="line">    <span class="keyword">return</span> array.<span class="built_in">length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Impure_Function">Impure Function</h2><h3 id="Definition-1">Definition</h3><p>A function is <strong>considered impure</strong> if it is not pure (!), typically because:</p>
<p>a) it makes use of an external or random value. (It stops being entirely contained and predictable)<br>b) It performs an external operation, in other words it causes side effects</p>
<h3 id="Examples">Examples</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addToX</span><span class="params">(a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + x; <span class="comment">// Use of an external variable</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(); <span class="comment">// Use of a random/non consistent value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(x,y)</span> </span>&#123;</span><br><span class="line">    updateDatabase(); <span class="comment">// Side Effect</span></span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="The_Big_Deal">The Big Deal</h2><p>The reason why Pure Function are great:</p>
<h3 id="Predictable">Predictable</h3><p>Yep, I know, it’s part of the definition, but using a function and knowing exactly what it does feels so good.</p>
<h3 id="Portable">Portable</h3><p>Pure functions can be reused easily as they do not hold any form of state.</p>
<h3 id="Cacheable">Cacheable</h3><p>Since the result will always be the same, it becomes easy to cache results.</p>
<h3 id="Testable_!">Testable !</h3><p>Last but not least, pure functions are easy and a pleasure to test with automated tests.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Quick run through on what pure and impure functions are. </p>
<p>I am looking at adapting one of my current old school MVC project to use Redux for state management. Since Redux makes use of the concept of pure functions, I thought I would lay it down here.<br>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Software Practices" scheme="http://klugjo.github.io/tags/Software-Practices/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[New Hexo Theme - Clean Blog]]></title>
    <link href="http://klugjo.github.io/2016/03/New-Hexo-Theme-Clean-Blog/"/>
    <id>http://klugjo.github.io/2016/03/New-Hexo-Theme-Clean-Blog/</id>
    <published>2016-03-15T07:23:21.000Z</published>
    <updated>2016-03-15T07:37:04.000Z</updated>
    <content type="html"><![CDATA[<p>I just finished developing an Hexo Theme: <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="external">Clean Blog</a>. Check out the <a href="http://www.codeblocq.com/assets/projects/hexo-theme-clean-blog/" target="_blank" rel="external">live demo</a>.</p>
<a id="more"></a>
<p>This theme is an Hexo implementation of <a href="http://blackrockdigital.github.io/startbootstrap-clean-blog/index.html" target="_blank" rel="external">Clean Blog</a></p>
<h2 id="Features">Features</h2><ul>
<li>Disqus and Facebook comments</li>
<li>Google Analytics</li>
<li>Cover image for posts and pages</li>
<li>Tags and Categories Support</li>
<li>Responsive Images</li>
<li>Image Gallery</li>
<li>Code syntax highlighting</li>
</ul>
<h2 id="Installation">Installation</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/klugjo/hexo-theme-clean-blog.git theme/clean-blog</span><br></pre></td></tr></table></figure>
<p>Then update your blog’s main <code>_config.yml</code> to set the theme to <code>clean-blog</code>:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Extensions</span></span><br><span class="line"><span class="meta">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">## Themes: http:<span class="comment">//hexo.io/themes/</span></span></span><br><span class="line"><span class="symbol">theme:</span> clean-blog</span><br></pre></td></tr></table></figure>
<h2 id="Configuration">Configuration</h2><h3 id="Menu">Menu</h3><p>The menu is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Header</span></span><br><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  Home:</span> /</span><br><span class="line"><span class="symbol">  Archives:</span> /archives</span><br></pre></td></tr></table></figure>
<p>The object key is the label and the value is the path.</p>
<h3 id="Top_Left_Label">Top Left Label</h3><p>The top left label is configured in the theme’s <code>_config.yml</code>. When clicked it will lead to the Home Page.</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Title <span class="keyword">on</span> top left <span class="keyword">of</span> menu. Leave <span class="keyword">empty</span> <span class="keyword">to</span> use main blog title</span><br><span class="line">menu_title: Configurable Title</span><br></pre></td></tr></table></figure>
<h3 id="Home_Page_cover_image">Home Page cover image</h3><p>The Home Page cover is configured in the theme’s <code>_config.yml</code>. It will be the same for all index type pages.</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># URL of the Home page image</span></span><br><span class="line"><span class="symbol">index_cover:</span> <span class="meta-keyword">/img/</span>home-bg.jpg</span><br></pre></td></tr></table></figure>
<h3 id="Default_post_title">Default post title</h3><p>The default post title (used when no title is specified) is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Default post title</span></span><br><span class="line"><span class="symbol">default_post_title:</span> Untitled</span><br></pre></td></tr></table></figure>
<h3 id="Comments">Comments</h3><p>The comments provider is specified in the theme’s <code>_config.yml</code>. If you specify both a <code>disqus_shortname</code> and a <code>facebook.appid</code> there will be 2 sets of comment per post. So choose one.</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comments. Choose one by filling up the information</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Disqus comments</span></span><br><span class="line"><span class="attr">  disqus_shortname:</span> klugjotest</span><br><span class="line">  <span class="comment"># Facebook comments</span></span><br><span class="line"><span class="attr">  facebook:</span></span><br><span class="line"><span class="attr">    appid:</span> <span class="number">123456789012345</span></span><br><span class="line"><span class="attr">    comment_count:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">    comment_colorscheme:</span> light</span><br></pre></td></tr></table></figure>
<h3 id="Google_Analytics">Google Analytics</h3><p>The Google Analytics Tracking ID is configured in the theme’s <code>_config.yml</code>.</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Google Analytics Tracking ID</span></span><br><span class="line"><span class="symbol">google_analytics:</span></span><br></pre></td></tr></table></figure>
<h3 id="Social_Account">Social Account</h3><p>Setup the links to your social pages in the theme’s <code>_config.yml</code>. Links are in the footer.</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Social Accounts</span></span><br><span class="line"><span class="symbol">twitter_url:</span></span><br><span class="line"><span class="symbol">facebook_url:</span></span><br><span class="line"><span class="symbol">github_url:</span> https:<span class="comment">//github.com/klugjo/hexo-theme-clean-blog</span></span><br></pre></td></tr></table></figure>
<h3 id="Author">Author</h3><p>The post’s author is specified in the posts front-matter:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> Klug Jo</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h3 id="Post’s_Cover_Image">Post’s Cover Image</h3><p>By default, posts will use the home page cover image. You can specify a custom cover in the front-matter:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cover:</span> <span class="meta-keyword">/assets/</span>contact-bg.jpg</span><br></pre></td></tr></table></figure>
<h2 id="Creator">Creator</h2><p>This theme was created by <a href="https://github.com/BlackrockDigital" target="_blank" rel="external">Blackrock Digital</a> and adapted for Hexo by <a href="http://www.codeblocq.com/" target="_blank" rel="external">myself</a>.</p>
<p>Hope you enjoy it, the theme should be easy enough to customize and modify to fit your needs. Checkout <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">my tutorial on building Hexo themes</a> if you need information on how themes are built.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I just finished developing an Hexo Theme: <a href="https://github.com/klugjo/hexo-theme-clean-blog">Clean Blog</a>. Check out the <a href="http://www.codeblocq.com/assets/projects/hexo-theme-clean-blog/">live demo</a>.</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://klugjo.github.io/tags/Hexo/"/>
    
      <category term="Theme" scheme="http://klugjo.github.io/tags/Theme/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Create an Hexo Theme - Part 3: Comments, Analytics and Widgets]]></title>
    <link href="http://klugjo.github.io/2016/03/Create-an-Hexo-Theme-Part-3-Comments-Analytics-and-Widgets/"/>
    <id>http://klugjo.github.io/2016/03/Create-an-Hexo-Theme-Part-3-Comments-Analytics-and-Widgets/</id>
    <published>2016-03-11T01:20:09.000Z</published>
    <updated>2016-03-30T05:25:22.000Z</updated>
    <content type="html"><![CDATA[<p>In this multi part tutorial, you will learn how to create an <a href="https://hexo.io/docs/themes.html" target="_blank" rel="external">Hexo Theme</a> from scratch. </p>
<p>In <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1</a> and <a href="/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/">Part 2</a>, we have created all the pages of the blog. In this last section, we are going to add <a href="https://disqus.com/" target="_blank" rel="external">Disqus comments</a> to our posts, implement <a href="https://www.google.com.sg/analytics/" target="_blank" rel="external">Google Analytics</a> and complete the sidebar’s widgets.</p>
<a id="more"></a>
<h2 id="Links_to_other_sections">Links to other sections</h2><ul>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1: Setting up the project and creating the blog’s main index page</a></li>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/">Part 2: Finishing up the remaining pages</a></li>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-3-Comments-Analytics-and-Widgets/">Part 3: Wrapping up with Disqus comments, Google Analytics and the widgets</a></li>
</ul>
<h2 id="Disqus_Comments">Disqus Comments</h2><p>I have already written a blog post on <a href="/2015/12/Add-Disqus-comments-in-Hexo/">how to implement Disqus comments in Hexo</a>. Please refer to it if you need more information but here is how to do it:</p>
<p>The first step is to get a Disqus UID to test the comments, you can get it from your Disqus account here:</p>
<p><img src="/img/add-disqus-comments-hexo-unique-name.jpg" alt="Disqus Unique Identifier"></p>
<p>Then there are three things that need to be implemented, the theme config for disqus, the comments placeholder and the Disqus script. Let’s get going.</p>
<h3 id="Theme_config">Theme config</h3><p>We want the Disqus UID to be configurable, let’s add an entry to the theme’s <code>_config.yml</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Disqus Comments Shortname</span><br><span class="line">disqus_shortname: klugjoTest</span><br></pre></td></tr></table></figure>
<h3 id="Comments_placeholder">Comments placeholder</h3><p>We are going to add comments to our <code>page</code> and <code>post</code> details pages. As always, let’s create a new partial view <code>layout/_partial/comments.ejs</code> and insert it at the end of our <code>layout/_partial/article-full.ejs</code>.</p>
<figure class="highlight html"><figcaption><span>layout/_partial/comments.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blog-post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   [...]</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Comments --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">comments</span>') %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Disqus is exepecting a <code>div#disqus_thread</code> element, here is the official code from the documentation</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"disqus_thread"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Please enable JavaScript to view the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"//disqus.com/?ref_noscript"</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Let’s integrate this into our comments partial:</p>
<figure class="highlight html"><figcaption><span>layout/_partial/comments.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">page.comments</span> &amp;&amp; <span class="attr">theme.disqus_shortname</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blog-post-comments"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Comments:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"disqus_thread"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Please enable JavaScript to view the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"//disqus.com/?ref_noscript"</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p>First we are checking that comments are ON and that our disqus UID has been set. Then we are placing the Disqus markup code inside a container.</p>
<p>Here is the CSS code I have used for that container:</p>
<figure class="highlight css"><figcaption><span>source/css/blog.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post-comments</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Disqus_script">Disqus script</h3><p>Before we can test, we need to add the Disqus script which contains all the magic. Place it with all the other scripts at the end of <code>layout/_partial/after-footer.ejs</code></p>
<figure class="highlight html"><figcaption><span>layout/_partial/after-footer.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Disqus Comments --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.disqus_shortname</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> disqus_shortname = <span class="string">'&lt;%= theme.disqus_shortname %&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> dsq = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">            dsq.type = <span class="string">'text/javascript'</span>;</span><br><span class="line">            dsq.async = <span class="literal">true</span>;</span><br><span class="line">            dsq.src = <span class="string">'//'</span> + disqus_shortname + <span class="string">'.disqus.com/&lt;% if (page.comments)&#123; %&gt;embed.js&lt;% &#125; else &#123; %&gt;count.js&lt;% &#125; %&gt;'</span>;</span><br><span class="line">            (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(dsq);</span><br><span class="line">        &#125;());</span><br><span class="line">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p>The script is taken from the <a href="https://help.disqus.com/customer/portal/articles/472097-universal-embed-code" target="_blank" rel="external">docs</a> and the Disqus UID was parameterized.</p>
<p>Go ahead and test that everything is working as expected.</p>
<h2 id="Google_Analytics">Google Analytics</h2><p>Google Analytics implementation follows the same principle as Disqus so I will move through it quickly. </p>
<p>I have another <a href="/2015/12/Add-Google-Analytics-to-your-hexo-blog/">blog post on that subject</a>.</p>
<h3 id="Setup_the_tracking_ID_in_the_theme’s_config">Setup the tracking ID in the theme’s config</h3><p>Get your google analytics tracking ID from your account and add a new entry to the config.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Google Analytics Tracking ID</span><br><span class="line">google_analytics: UA-83746351-2</span><br></pre></td></tr></table></figure>
<h3 id="Create_a_new_partial">Create a new partial</h3><p>Create a new partial view <code>layout/_partial/google-analytic.ejs</code></p>
<figure class="highlight html"><figcaption><span>layout/_partial/google-analytic.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.google_analytics</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span><br><span class="line">        (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">'GoogleAnalyticsObject'</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    (i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),</span><br><span class="line">                m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;m.parentNode.insertBefore(a,m)</span><br><span class="line">        &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'script'</span>,<span class="string">'//www.google-analytics.com/analytics.js'</span>,<span class="string">'ga'</span>);</span><br><span class="line"></span><br><span class="line">        ga(<span class="string">'create'</span>, <span class="string">'&lt;%= theme.google_analytics %&gt;'</span>, <span class="string">'auto'</span>);</span><br><span class="line">        ga(<span class="string">'send'</span>, <span class="string">'pageview'</span>);</span><br><span class="line"></span><br><span class="line">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p>This is a simple copy paste of <a href="https://support.google.com/analytics/answer/1008080?hl=en" target="_blank" rel="external">Google Analytics Tracking code</a> with a parameterized ID.</p>
<h3 id="Integrate_the_partial">Integrate the partial</h3><p>We want our tracking code on all pages, and there is not best place to put it on a page. Let’s add it at the end of our <code>&lt;head&gt;&lt;/head&gt;</code>:</p>
<figure class="highlight html"><figcaption><span>layout/_partial/head.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    [...]</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Google Analytics --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">google-analytics</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>And we are done !</p>
<h2 id="Widgets">Widgets</h2><p>At the moment our widgets are just a bunch of hardcoded, static HTML inside <code>sidebar.ejs</code>. Let’s fix that.</p>
<h3 id="Configuration">Configuration</h3><p>Let’s start with the configuration. </p>
<p>We are going to create two widgets, one <strong>About</strong> widget and one <strong>Tags</strong> widget. I want the JavaScript object version of the config to look like</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    widgets: &#123;</span><br><span class="line">        about: <span class="string">"Here goes the about text"</span>,</span><br><span class="line">        tags: <span class="literal">true</span> <span class="comment">// Or any additional configuration the widget needs</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This is how it translates to <strong>YML</strong> inside our theme’s configuration file:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Widgets List</span><br><span class="line">widgets:</span><br><span class="line">  about: This blog is based off the official bootstrap blog template. Checkout the corresponding tutorial at &lt;a href=&quot;http://www.codeblocq.com&quot;&gt;http://www.codeblocq.com&lt;/a</span><br><span class="line">  tags: true</span><br></pre></td></tr></table></figure>
<h3 id="Sidebar_Code">Sidebar Code</h3><p>Our sidebar which is the placeholder of all our widgets, will need to iterate through all the widgets in the configuration and render them appropriately:</p>
<p>This what the sidebar EJS template now looks like:</p>
<figure class="highlight html"><figcaption><span>layout/_partial/sidebar.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span>(<span class="attr">var</span> <span class="attr">widget</span> <span class="attr">in</span> <span class="attr">theme.widgets</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">widget</span>/' + <span class="attr">widget</span>) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;; %&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="First_Widget:_About">First Widget: About</h3><p>Let’s build our first widget inside a new partial called <code>layout/_partial/widget/about.ejs</code>. </p>
<p>The code is copy pasted from the original bootstrap template and the text now comes from the configuration.</p>
<figure class="highlight html"><figcaption><span>layout/_partial/widget/about.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.widgets.about</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-module sidebar-module-inset"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>About<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">theme.widgets.about</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Second_Widget:_Tags">Second Widget: Tags</h3><p>Let’s do something slighty more advanced for this widget. Display a paragraph with all the tags used in the blog, separated by whitespaces and with a font size proportional to the number of times the tag is used.</p>
<p>Here is the code in <code>layout/_partial/widget/tags.ejs</code></p>
<figure class="highlight html"><figcaption><span>layout/_partial/widget/tags.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.widgets.tags</span> &amp;&amp; <span class="attr">site.tags.length</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-module"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Tags<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> <span class="attr">site.tags.sort</span>('<span class="attr">name</span>')<span class="attr">.each</span>(<span class="attr">function</span>(<span class="attr">item</span>)&#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">style</span>=<span class="string">"font-size: &lt;%- Math.min(item.posts.length * 2 + 13, 30) %&gt;px"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.name</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> &#125;); %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>site.tags</code> gives us access to all the tags</li>
<li><code>site.tags.sort(&#39;name&#39;)</code> sorts all the tags by alphabetical order</li>
<li><code>item.path</code> correspond to the relative URL to the archive page for that tag</li>
<li><code>item.posts.length</code> gives you the number of time a tag is used</li>
<li><code>item.name</code> is the Tag label</li>
</ul>
<p>I chose <strong>13 + (tag occurence * 2)</strong> in pixels (capped at 30px) for the <code>font-size</code> but feel free to use what you want. </p>
<h2 id="The_End">The End</h2><p>That’s the end of this tutorial, I hope you have learnt something interesting from it.</p>
<p>Here are a few things you can do if you want to develop it further:</p>
<ul>
<li>Finish the implementation of the head by parameterizing the <code>&lt;title&gt;</code> and all the <a href="http://ogp.me/" target="_blank" rel="external">Open Graph</a> properties.</li>
<li>Add more widgets, for example a <a href="https://github.com/hexojs/hexo-theme-light/blob/master/layout/_widget/search.ejs" target="_blank" rel="external">search widget</a> or a <a href="https://github.com/hexojs/hexo-theme-light/blob/master/layout/_widget/recent_posts.ejs" target="_blank" rel="external">recent posts widget</a>.</li>
<li>Run <a href="https://github.com/hexojs/hexo-theme-unit-test" target="_blank" rel="external">Hexo Theme Unit Tests</a> to make sure that everything is in order.</li>
<li>Publish your theme on the <a href="https://hexo.io/themes/" target="_blank" rel="external">hexo website’s theme gallery</a>.</li>
<li>Check out my other <a href="/tags/Hexo/">Hexo tutorials</a> to improve your blog.</li>
<li>Check out <a href="https://github.com/cgmartin/hexo-theme-bootstrap-blog" target="_blank" rel="external">hexo-theme-bootstrap-blog</a> which is an implementation of the same bootstrap template.</li>
<li>Implement your own theme from scratch.</li>
</ul>
<p>Thanks for reading ! Really appreciate your comments, corrections, suggestions in the comments.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In this multi part tutorial, you will learn how to create an <a href="https://hexo.io/docs/themes.html">Hexo Theme</a> from scratch. </p>
<p>In <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1</a> and <a href="/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/">Part 2</a>, we have created all the pages of the blog. In this last section, we are going to add <a href="https://disqus.com/">Disqus comments</a> to our posts, implement <a href="https://www.google.com.sg/analytics/">Google Analytics</a> and complete the sidebar’s widgets.</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://klugjo.github.io/tags/Hexo/"/>
    
      <category term="Analytics" scheme="http://klugjo.github.io/tags/Analytics/"/>
    
      <category term="Disqus" scheme="http://klugjo.github.io/tags/Disqus/"/>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Theme" scheme="http://klugjo.github.io/tags/Theme/"/>
    
      <category term="Bootstrap" scheme="http://klugjo.github.io/tags/Bootstrap/"/>
    
      <category term="Template" scheme="http://klugjo.github.io/tags/Template/"/>
    
      <category term="EJS" scheme="http://klugjo.github.io/tags/EJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Create an Hexo Theme - Part 2: Other Pages]]></title>
    <link href="http://klugjo.github.io/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/"/>
    <id>http://klugjo.github.io/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/</id>
    <published>2016-03-09T11:34:13.000Z</published>
    <updated>2016-03-13T09:45:25.000Z</updated>
    <content type="html"><![CDATA[<p>In this multi part tutorial, you will learn how to create an <a href="https://hexo.io/docs/themes.html" target="_blank" rel="external">Hexo Theme</a> from scratch. </p>
<p>In <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1</a>, we have setup the project and the Home Page. In this section, we are going to build on what we have learnt to finish up all the remaining pages.</p>
<a id="more"></a>
<h2 id="Links_to_other_sections">Links to other sections</h2><ul>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1: Setting up the project and creating the blog’s main index page</a></li>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/">Part 2: Finishing up the remaining pages</a></li>
<li><a href="/2016/03/Create-an-Hexo-Theme-Part-3-Comments-Analytics-and-Widgets/">Part 3: Wrapping up with Disqus comments, Google Analytics and the widgets</a></li>
</ul>
<h2 id="The_Post_Detail_page">The Post Detail page</h2><p>Let’s continue where we left off in part 1 and create the post detail page.</p>
<p>As we have seen, to render the detail page, Hexo will look for a <code>post.ejs</code> file in our <code>/layout/</code> folder.</p>
<p>Here is my post.ejs:</p>
<figure class="highlight html"><figcaption><span>layout/post.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">article-full</span>', &#123;<span class="attr">item:</span> <span class="attr">page</span>&#125;) %&gt;</span></span><br></pre></td></tr></table></figure>
<p>To keep the code organised, the actual code is deferred to a <code>_partial/article-full.ejs</code> that we are going to create now:</p>
<figure class="highlight html"><figcaption><span>layout/_partial/article-full.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blog-post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Title --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"blog-post-title"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.title</span> || <span class="attr">item.link</span>%&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Date and Author --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"blog-post-meta"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.author</span>) &#123; %&gt;</span></span><br><span class="line">            by <span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.author</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.content</span> %&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Tags and Categories links --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">article-tags</span>', &#123;<span class="attr">item:</span> <span class="attr">item</span>&#125;) %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">article-categories</span>', &#123;<span class="attr">item:</span> <span class="attr">item</span>&#125;) %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This template is almost the same as <code>_partial/article-excerpt.ejs</code>, except that:</p>
<ul>
<li>We are displaying the full content with <code>&lt;%- item.content %&gt;</code> and not the excerpt.</li>
<li>There are two additional partial views at the bottom, one for tags and one for categories. We will jump into these right now.</li>
</ul>
<h3 id="Post_Tags">Post Tags</h3><p>Let’s create the partial that will render the list of tags for a post: <code>layout/_partial/article-tags.ejs</code>. </p>
<p>What we want is a list of #tags with links to the corresponding ‘tag page’ which will display all the posts with that tag. </p>
<figure class="highlight"><figcaption><span>layout/_partial/article-tags.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (item.tags &amp;&amp; item.tags.length)&#123; %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    var tags = [];</span><br><span class="line">    item.tags.forEach(function(tag)&#123;</span><br><span class="line">        tags.push('&lt;a href="' + config.root + tag.path + '"&gt;#' + tag.name + '&lt;/a&gt;');</span><br><span class="line">    &#125;);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;div class="blog-tags-container"&gt;</span><br><span class="line">    &lt;span class="glyphicon glyphicon-tags"&gt;&lt;/span&gt;</span><br><span class="line">    &lt;%- tags.join(' ') %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>Nothing complicated, we are enumerating through all the tags in <code>post.tags</code> and displaying them one after the other. I have added a hashtag before each tag and an icon before the list for good measure.</p>
<h3 id="Post_Categories">Post Categories</h3><p>The <code>layout/_partial/article-categories.ejs</code> partial is very similar:</p>
<figure class="highlight"><figcaption><span>layout/_partial/article-categories.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (item.categories &amp;&amp; item.categories.length)&#123; %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    var categories = [];</span><br><span class="line">    item.categories.forEach(function(category)&#123;</span><br><span class="line">        categories.push('&lt;a href="' + config.root + category.path + '"&gt;' + category.name + '&lt;/a&gt;');</span><br><span class="line">    &#125;);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;div class="blog-categories-container"&gt;</span><br><span class="line">    &lt;span class="glyphicon glyphicon-folder-open"&gt;&lt;/span&gt;</span><br><span class="line">    &lt;%- categories.join(' / ') %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>No explanation required.</p>
<h3 id="Post_CSS">Post CSS</h3><p>As you may have noticed, there are 2 new CSS classes used for tags and categories styling. Here is the code for it, added to <code>blog.css</code>:</p>
<figure class="highlight css"><figcaption><span>source/css/blog.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-tags-container</span>, <span class="selector-class">.blog-categories-container</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blog-tags-container</span> <span class="selector-tag">span</span><span class="selector-class">.glyphicon</span>, <span class="selector-class">.blog-categories-container</span> <span class="selector-tag">span</span><span class="selector-class">.glyphicon</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="The_detail_page_for_page_type_content">The detail page for page type content</h2><p>This is an easy one. The ‘page type’ pages will be the same as ‘post type’ pages. Feel free to customise it as an exercise, but here is mine:</p>
<figure class="highlight html"><figcaption><span>layout/page.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">article-full</span>', &#123;<span class="attr">item:</span> <span class="attr">page</span>&#125;) %&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="The_Archive_page">The Archive page</h2><p>The archive page will display a list of posts in a more condensed way than the index page. The base will be the same as the index though:</p>
<figure class="highlight html"><figcaption><span>layout/archive.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">page.posts.each</span>(<span class="attr">function</span>(<span class="attr">item</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">article-archive</span>', &#123;<span class="attr">item:</span> <span class="attr">item</span>&#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;); %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">pagination</span>') %&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="The_article-archive_partial_view">The article-archive partial view</h3><p>As always, the actual work is in the partial view. I used <code>article-excerpt</code> as the base and stripped it down to just the title, date and author:</p>
<figure class="highlight html"><figcaption><span>layout/_partial/article-archive.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blog-post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Title --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"blog-post-title-archive"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.title</span> || <span class="attr">item.link</span>%&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Date and Author --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"blog-post-meta"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.author</span>) &#123; %&gt;</span></span><br><span class="line">            by <span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.author</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Careful eyes will have noticed the new CSS class that I have created for archive titles (they were too big for my liking):</p>
<figure class="highlight css"><figcaption><span>source/css/blog.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post-title-archive</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Tags_and_Categories_Pages">Tags and Categories Pages</h2><p>The last two pages we need to work are for the list of posts that correspond to a tag and a category. Now if you remember well:</p>
<table>
<thead>
<tr>
<th>Template</th>
<th>Fallback</th>
<th>Page Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>archive</code></td>
<td><code>index</code></td>
<td>This is the archive page. It will display a list of all the posts in our blog with just titles and links to the detail page.</td>
</tr>
<tr>
<td><code>category</code></td>
<td><code>archive</code></td>
<td>This is the category page. Similar to the archive page but filtered for one category.</td>
</tr>
<tr>
<td><code>tag</code></td>
<td><code>archive</code></td>
<td>This is the tag page. Similar to the archive page page but filtered for one tag.</td>
</tr>
</tbody>
</table>
<p>The fallback page for our <code>tag.ejs</code> and <code>category.ejs</code> is <code>archive.ejs</code>. Because I don’t see any major difference in between these 3 pages, we are just going to use the fallback to <code>archive.ejs</code>. Less code to write, less duplicate code, easier to maintain.</p>
<p>But in order to differentiate our 3 pages, we are going to add a title to the archive page:</p>
<figure class="highlight html"><figcaption><span>layout/archive.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span><br><span class="line">    <span class="attr">var</span> <span class="attr">title</span> = '';</span><br><span class="line">    <span class="attr">if</span> (<span class="attr">page.category</span>) <span class="attr">title</span> = <span class="attr">page.category</span>;</span><br><span class="line">    <span class="attr">if</span> (<span class="attr">page.tag</span>) <span class="attr">title</span> = <span class="attr">page.tag</span>;</span><br><span class="line">    <span class="attr">if</span> (<span class="attr">page.archive</span>)&#123;</span><br><span class="line">        <span class="attr">if</span> (<span class="attr">page.year</span>) <span class="attr">title</span> = <span class="attr">page.year</span> + (<span class="attr">page.month</span> ? '/' + <span class="attr">page.month</span> <span class="attr">:</span> '');</span><br><span class="line">        <span class="attr">else</span> <span class="attr">title</span> = "<span class="attr">Archives</span>";</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">title</span>) &#123; %&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"blog-archive-title"</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">page.posts.each</span>(<span class="attr">function</span>(<span class="attr">item</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">article-archive</span>', &#123;<span class="attr">item:</span> <span class="attr">item</span>&#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;); %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">pagination</span>') %&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now we have a nice title that describes what our archive page is for.</p>
<p>And here is the CSS that goes with it:</p>
<figure class="highlight css"><figcaption><span>source/css/blog.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-archive-title</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This section of the tutorial was pretty straightforward, simply building up on concepts defined in <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1</a>. I encourage to play around with the theme and hack it to your tastes.</p>
<p>In <a href="/2016/03/Create-an-Hexo-Theme-Part-3-Comments-Analytics-and-Widgets/">Part 3</a>, we will add a comment section, analytics, widgets and polishing things up. See you there !</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In this multi part tutorial, you will learn how to create an <a href="https://hexo.io/docs/themes.html">Hexo Theme</a> from scratch. </p>
<p>In <a href="/2016/03/Create-an-Hexo-Theme-Part-1-Index/">Part 1</a>, we have setup the project and the Home Page. In this section, we are going to build on what we have learnt to finish up all the remaining pages.</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://klugjo.github.io/tags/Hexo/"/>
    
      <category term="JavaScript" scheme="http://klugjo.github.io/tags/JavaScript/"/>
    
      <category term="Theme" scheme="http://klugjo.github.io/tags/Theme/"/>
    
      <category term="Bootstrap" scheme="http://klugjo.github.io/tags/Bootstrap/"/>
    
      <category term="Template" scheme="http://klugjo.github.io/tags/Template/"/>
    
      <category term="EJS" scheme="http://klugjo.github.io/tags/EJS/"/>
    
  </entry>
  
</feed>
